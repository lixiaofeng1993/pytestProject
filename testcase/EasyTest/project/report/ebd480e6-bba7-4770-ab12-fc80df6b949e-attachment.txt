INFO     root:read_data.py:57 加载 E:\projects\pytestProject\testcase\EasyTest\project\data\parametrize_project.json 文件......
INFO     root:read_data.py:63 读到数据 ==>>  [{'case_name': '创建成功', 'data': {'name': '__word', 'description': '__text', 'sign_id': '$sign_id', 'users_id': ''}, 'validate': [{'comparator': 'equal', 'check': 'status_code', 'expect': '200', 'jsonpath': ''}]}, {'case_name': 'name不符合格式', 'data': {'name': '', 'description': '__text', 'sign_id': '$sign_id', 'users_id': ''}, 'validate': [{'comparator': 'equal', 'check': 'code', 'expect': '10008', 'jsonpath': '$.detail.code'}]}, {'case_name': 'name已存在', 'data': {'name': '$query_name', 'description': '__text', 'sign_id': '$sign_id', 'users_id': ''}, 'validate': [{'comparator': 'equal', 'check': 'code', 'expect': '10007', 'jsonpath': '$.detail.code'}]}, {'case_name': 'sign_id不存在', 'data': {'name': '__word', 'description': '__text', 'sign_id': '', 'users_id': ''}, 'validate': [{'comparator': 'equal', 'check': 'status_code', 'expect': '200', 'jsonpath': ''}]}] 
INFO     root:common.py:48 提取替换的数据 ==>> sql_query_name -> 人民
INFO     root:test_project_case.py:32 *************** 开始执行用例 ***************
INFO     root:bae_request.py:39 接口请求地址 ==>> http://127.0.0.1:8000/sign/
INFO     root:bae_request.py:40 接口请求方式 ==>> GET
INFO     root:bae_request.py:42 接口请求头 ==>> {
    "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJsaXhpYW9mZW5nIiwiZXhwIjoxNjYyNjQ1MDk3fQ.KSxUEyOI43HJ91CmGDXgTktAx4e6Qvg-N5ZUeusws-k"
}
INFO     root:bae_request.py:43 接口请求 params 参数 ==>> {}
INFO     root:bae_request.py:44 接口请求体 data 参数 ==>> 
INFO     root:bae_request.py:45 接口请求体 json 参数 ==>> {}
INFO     root:bae_request.py:46 接口上传附件 files 参数 ==>> []
INFO     root:bae_request.py:54 接口返回信息 ==>> {'code': 200, 'message': '请求成功', 'result': [{'sign_type': 'MD5', 'is_delete': False, 'create_date': '2022-09-08 19:36:17', 'name': 'MD5加密', 'description': None, 'update_date': '2022-09-08 19:36:15', 'users_id': '00ff7a9e3eb140f09f1f905a77efbd06', 'id': '1'}]}
INFO     root:common.py:290 断言方式：bool 断言字段：name ==>> 断言值：True ==>> 期望值：['MD5加密']
INFO     root:common.py:412 断言成功！
INFO     root:common.py:158 从返回值中提取的参数 路径 值 ==>> sign_id:$.result[0].id -> ['1']
INFO     root:bae_request.py:39 接口请求地址 ==>> http://127.0.0.1:8000/project/
INFO     root:bae_request.py:40 接口请求方式 ==>> POST
INFO     root:bae_request.py:42 接口请求头 ==>> {
    "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJsaXhpYW9mZW5nIiwiZXhwIjoxNjYyNjQ1MDk3fQ.KSxUEyOI43HJ91CmGDXgTktAx4e6Qvg-N5ZUeusws-k"
}
INFO     root:bae_request.py:43 接口请求 params 参数 ==>> {}
INFO     root:bae_request.py:44 接口请求体 data 参数 ==>> 
INFO     root:bae_request.py:45 接口请求体 json 参数 ==>> {
    "name": "一起",
    "description": "的话今天中心类型相关.问题事情工程觉得专业.服务责任使用项目地址企业.部分拥有单位表示地址更多以下.相关数据在线结果看到更新.国家虽然情况知道非常积分.科技日期作者日本历史.问题类型能够不同出来信息.你们这里不过以后客户文件.学校以下的话不同次数.状态报告内容.今年功能部门方面今天资料.类型说明一样不会那个.",
    "sign_id": "",
    "users_id": ""
}
INFO     root:bae_request.py:46 接口上传附件 files 参数 ==>> []
INFO     root:bae_request.py:54 接口返回信息 ==>> {'detail': {'code': 10009, 'message': 'sign ID  不存在！'}}
INFO     root:common.py:290 断言方式： 断言字段：None ==>> 断言值：None ==>> 期望值：
INFO     root:common.py:412 断言成功！
INFO     root:test_project_case.py:46 *************** 结束执行用例 ***************
INFO     root:conftest.py:52 退出登录接口 -->> 返回值： {'detail': {'code': 10010, 'message': 'lixiaofeng 退出登录成功！'}}